<?php

use Fisharebest\Webtrees\Gedcom;
use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\View;

$thePlace = strstr($placeName, Gedcom::PLACE_SEPARATOR, true);
if (!$thePlace) {
  $thePlace = $placeName;
}
?>
    
<div class="form-group">
    <?php if ($withLabel): ?>
      <label class="col-form-label" for="<?= $id ?>">
          <?= I18N::translate('GOV id') ?>
      </label>
    <?php endif ?>
    <?php 
      //we'd like to use far fa-compass but we'd have to import explicitly
    ?>
    
    <?php 
      //TODO we should cutoff, for href, at first comma
    ?>
    <?php if ($placeNameInputSelector !== null): ?>
        <div><span class="wt-icon-map-gov"><i class="fas fa-play fa-fw" aria-hidden="true"></i></span> <a href="http://gov.genealogy.net/search/extended" onclick="var REF = $('<?= $placeNameInputSelector ?>'); window.open((REF.val() !== '')?'http://gov.genealogy.net/search/name/?name='+REF.val():'http://gov.genealogy.net/search/extended'); return false;" target="_blank"><?= I18N::translate('Look up a matching GOV id on the GOV server') ?></a></div>
    <?php else: ?>
        <div><span class="wt-icon-map-gov"><i class="fas fa-play fa-fw" aria-hidden="true"></i></span> <a href="http://gov.genealogy.net/search/<?= $thePlace === ''?'extended':'name/?name='.$thePlace ?>" target="_blank"><?= I18N::translate('Look up a matching GOV id on the GOV server') ?></a></div>
    <?php endif ?>    
    
    <?php if ($internal): ?>
      <div><?= I18N::translate('Note: The mapping from place to GOV id is stored outside the gedcom data.') ?></div>
      <div><?= ($govId === null)?'':I18N::translate('Save the current id in order to reload the place hierarchy data from the GOV server.') ?></div>
      <div><?= ($govId === null)?'':I18N::translate('You may also save an empty id in order to remove the mapping.') ?></div>
    <?php endif ?>

</div>

<?php
  //data-minimum-input-length: usually 12, but there are some shorter ones, such as adm_368372
?>

<select
    autocomplete="off"
    class="form-control select2gov"
    data-ajax--delay="350"
    data-minimum-input-length="10"
    data-ajax--type="POST"
    data-ajax--url="<?= e(route('module', [
        'module' => $moduleName,
        'action' => 'Select2GovId',
    ])) ?>"
    data-allow-clear="true"
    data-placeholder=""
    id="<?= $id ?>"
    name="<?= $name ?>"
    style="width:100%"
    <?= (($govId === null) && $internal)?'required':'' ?>>
    <?php if ($govId !== null): ?>
        <option value="<?= $govId ?>">
            <?= $govId ?>
        </option>
    <?php else: ?>
        <option></option>
    <?php endif ?>
</select>

<?php View::push('javascript') ?>
<?php if ($select2Initializer === null): /* cf ajax.phtml (in case this is used as a modal, or part thereof), with adjustment for 'noResults' */
//nothing to do, handled elsewhere
 
//this fixes issue #9.  
//apparently, there is no way to properly and consistently (fast vs slow servers) initialize select2 within modal via script loaded via ajax.
//
//note that in any case we'd keep adding more event listeners every time the content is loaded via ajax,
//so anyway, it seems better to initialize from placeholder, as in ajax.phtml;
//we just need our own specific placeholder: ajax-modal-vesta.phtml.
//
//by the way: why are we even loading modal content via ajax? seems clumsy.
?>
<?php else: /* cf webtrees.js, with adjustment for 'noResults' */ ?>
<script>
$(function() {
  <?= $select2Initializer ?>
  //do we really need this?
  //$("select.select2gov:not([multiple])")
  //  .on("select2:unselect", function (evt) {
  //      $(evt.delegateTarget).html("<option value=\"\" selected></option>");
  //  });
   
});
</script>
<?php endif ?>

<?php View::endpush() ?>